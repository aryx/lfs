
##############################################################################
# Generic variables
##############################################################################
OBJS= $(SRC:.ml=.cmo)
OPTOBJS= $(SRC:.ml=.cmx)

##############################################################################
# Generic OCaml variables
##############################################################################

OCAMLC=ocamlc$(OPTBIN) -g -dtypes   $(INCLUDES) 
OCAMLOPT=ocamlopt$(OPTBIN)   $(INCLUDES) $(OPTFLAGS)
OCAMLLEX=ocamllex$(OPTBIN)
OCAMLYACC=ocamlyacc -v
OCAMLDEP=ocamldep$(OPTBIN)  $(INCLUDES)
OCAMLMKTOP=ocamlmktop -g -custom $(INCLUDES)

##############################################################################
# Top rules
##############################################################################
all: $(TARGET).cma
all.opt: $(TARGET).cmxa
opt: all.opt

$(TARGET).cma: $(OBJS) $(LIBS)
	$(OCAMLC) -a -o $(TARGET).cma $(OBJS)

$(TARGET).cmxa: $(OPTOBJS) $(LIBS:.cma=.cmxa)
	$(OCAMLOPT) -a -o $(TARGET).cmxa $(OPTOBJS)

##############################################################################
# Generic rules
##############################################################################
.SUFFIXES: .ml .mli .cmo .cmi .cmx

.ml.cmo:
	$(OCAMLC) -c $<
.mli.cmi:
	$(OCAMLC) -c $<
.ml.cmx:
	$(OCAMLOPT) -c $<

.ml.mldepend: 
	$(OCAMLC) -i $<

clean::
	rm -f *.cm[ioxa] *.o *.a *.cmxa *.annot

clean::
	rm -f *~ .*~ gmon.out #*#

beforedepend::

depend:: beforedepend
	$(OCAMLDEP) *.mli *.ml    > .depend

-include .depend

##############################################################################
# install
##############################################################################

OCAMLSTDLIB=`ocamlc -where`
install: all all.opt
	mkdir -p $(OCAMLSTDLIB)/$(LIBNAME)
	cp $(LIBNAME).cma $(LIBNAME).cmxa \
          common.mli ocaml.mli \
          $(OCAMLSTDLIB)/$(LIBNAME)

install-findlib: all all.opt
	ocamlfind install $(LIBNAME) META \
    $(LIBNAME).cma $(LIBNAME).cmxa $(LIBNAME).a *.cmi $(EXPORTSRC)

uninstall-findlib:
	ocamlfind remove $(LIBNAME)

# note that the dlllib.so will be added in lib/stublibs/
#          dlllib.so lib.a liblib.a \
#          dlllib.so liblib.a\
#todo: $(EXPORTSRC:%.mli=%.cmt) but must be guarded by having bin-annot
